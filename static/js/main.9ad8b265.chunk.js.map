{"version":3,"sources":["api/fetch.js","TodoItem.js","TodoList.js","App.js","index.js"],"names":["getData","URL","response","regenerator_default","a","async","_context","prev","next","awrap","fetch","sent","abrupt","json","stop","TodoItem","_ref","item","react_default","createElement","id","title","completed","user","name","HEADERS","TodoList","list","_useState","useState","_useState2","Object","slicedToArray","todos","sortTodos","_useState3","_useState4","isSorted","setSorted","_useState5","_useState6","activeField","setActiveField","keys","map","header","onClick","field","callback","b","localeCompare","reverse","sort","sortList","key","todo","src_TodoItem","App","combinedPosts","setCombinedPosts","isLoaded","setLoaded","isLoading","setLoading","_useState7","_useState8","isError","setError","className","src_TodoList","Fragment","type","todosData","usersData","allData","objectSpread2","find","userId","t0","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.9ad8b265.chunk.js","sourcesContent":["export const getData = async(URL) => {\n  const response = await fetch(URL);\n\n  return response.json();\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = ({ item }) => (\n  <tr>\n    <td>{item.id}</td>\n    <td>{item.title}</td>\n    <td>{item.completed ? 'Yes' : 'No'}</td>\n    <td>{item.user.name}</td>\n  </tr>\n);\n\nTodoItem.propTypes = { item: PropTypes.shape({\n  id: PropTypes.number,\n  title: PropTypes.string,\n  completed: PropTypes.bool,\n  user: PropTypes.shape({\n    name: PropTypes.string,\n  }),\n}).isRequired };\n\nexport default TodoItem;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst HEADERS = {\n  id: 'Id',\n  title: 'Description',\n  completed: 'Is completed?',\n  user: 'Responsible person',\n};\n\nconst TodoList = ({ list }) => {\n  const [todos, sortTodos] = useState(list);\n  const [isSorted, setSorted] = useState(false);\n  const [activeField, setActiveField] = useState('id');\n\n  const sortList = (field) => {\n    let callback;\n\n    switch (typeof list[0][field]) {\n      case 'string':\n        callback = (a, b) => a[field].localeCompare(b[field]);\n        break;\n      case 'object':\n        callback = (a, b) => a[field].name.localeCompare(b[field].name);\n        break;\n      case 'boolean':\n        callback = (a, b) => b[field] - a[field];\n        break;\n      default:\n        callback = (a, b) => a[field] - b[field];\n    }\n\n    if (!isSorted || activeField !== field) {\n      sortTodos(todos.sort(callback));\n      setSorted(true);\n      setActiveField(field);\n    } else {\n      sortTodos(todos.reverse());\n      setSorted(false);\n    }\n  };\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          {Object.keys(HEADERS).map(header => (\n            <th\n              onClick={() => sortList(header)}\n              key={header}\n            >\n              {HEADERS[header]}\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {todos.map(todo => (\n          <TodoItem key={todo.id} item={todo} />)\n        )}\n      </tbody>\n    </table>\n  );\n};\n\nTodoList.propTypes = {\n  list: PropTypes.arrayOf(\n    PropTypes.object\n  ).isRequired,\n};\n\nexport default TodoList;\n","import React, { useState } from 'react';\nimport { getData } from './api/fetch';\nimport TodoList from './TodoList';\nimport './App.css';\n\nconst TODOS_URL = 'https://jsonplaceholder.typicode.com/todos';\nconst USERS_URL = 'https://jsonplaceholder.typicode.com/users';\n\nconst App = () => {\n  const [combinedPosts, setCombinedPosts] = useState([]);\n  const [isLoaded, setLoaded] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [isError, setError] = useState(false);\n\n  const loadData = async() => {\n    setLoading(true);\n\n    try {\n      const todosData = await getData(TODOS_URL);\n      const usersData = await getData(USERS_URL);\n\n      const allData = todosData.map(todo => ({\n        ...todo,\n        user: usersData.find(user => user.id === todo.userId),\n      }));\n\n      setCombinedPosts(allData);\n      setLoading(false);\n      setLoaded(true);\n    } catch (e) {\n      setLoading(false);\n      setError(true);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of todos</h1>\n\n      {isLoaded ? (\n        <TodoList list={combinedPosts} />\n      ) : (\n        <>\n          <h2>{isError ? 'Error occured!!!' : 'No TodoList yet!'}</h2>\n\n          <button\n            className=\"load-btn\"\n            type=\"button\"\n            onClick={loadData}\n          >\n            {isLoading ? 'Loading...' : 'Load TodoList'}\n          </button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}